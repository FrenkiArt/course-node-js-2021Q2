version: '3.4'

services:
  my-app:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: my-app
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./logs:/usr/app/logs
      - ./src:/usr/app/src
      # - node_modules:/usr/app/node_modules
    environment:
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - my-db
    networks:
      - my-network
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
  my-db:
    image: 'postgres:13.3-alpine'
    container_name: my-db
    ports:
      - 5433:${POSTGRES_PORT}
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    restart: always
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
